# OAuth Directory Configuration for G2Own
# Security and clean URL configuration for OAuth integration

# Deny direct access to sensitive files and patterns
<FilesMatch "\.(log|conf|bak|tmp|sql|ini|env)$">
    Order allow,deny
    Deny from all
</FilesMatch>

# Deny access to version control and IDE files
<FilesMatch "(\.(git|svn|hg)|\.DS_Store|Thumbs\.db|\.vscode|\.idea)">
    Order allow,deny
    Deny from all
</FilesMatch>

# Deny access to backup and temporary files
<FilesMatch "(~|\.sw[op]|\.orig|\.rej)$">
    Order allow,deny
    Deny from all
</FilesMatch>

# Enhanced Security headers for OAuth
<IfModule mod_headers.c>
    # Prevent clickjacking
    Header always append X-Frame-Options DENY
    
    # Prevent MIME type sniffing
    Header always set X-Content-Type-Options nosniff
    
    # Enable XSS protection
    Header always set X-XSS-Protection "1; mode=block"
    
    # Strict transport security (HTTPS enforcement)
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    
    # Referrer policy for OAuth security
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    
    # Content Security Policy (OAuth-specific)
    Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://g2own.com https://fonts.googleapis.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://g2own.com; frame-ancestors 'none';"
    
    # OAuth-specific security headers
    Header always set X-Permitted-Cross-Domain-Policies "none"
    Header always set Cross-Origin-Resource-Policy "same-origin"
    Header always set Cross-Origin-Embedder-Policy "require-corp"
    Header always set Cross-Origin-Opener-Policy "same-origin"
    
    # Cache control for OAuth responses (prevent caching sensitive data)
    Header always set Cache-Control "no-store, no-cache, must-revalidate, max-age=0, private"
    Header always set Pragma "no-cache"
    Header always set Expires "Thu, 01 Jan 1970 00:00:00 GMT"
    
    # Remove server signature for security
    Header always unset X-Powered-By
    Header always unset Server
</IfModule>

# URL Rewriting for OAuth endpoints
<IfModule mod_rewrite.c>
    RewriteEngine On
    
    # Force HTTPS for OAuth endpoints (security best practice)
    RewriteCond %{HTTPS} off
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
    
    # Specific OAuth endpoint routing (case-insensitive)
    RewriteRule ^callback/?$ callback.php [NC,L]
    RewriteRule ^success/?$ success.php [NC,L]
    
    # Block access to sensitive files
    RewriteRule ^(.*\.log|.*\.conf|.*\.bak)$ - [F,L]
    
    # General clean URL handling for other PHP files
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_URI} !^/(callback|success)/?$
    RewriteRule ^([^\.]+)$ $1.php [L]
    
    # Prevent direct access to PHP files (except OAuth endpoints)
    RewriteCond %{THE_REQUEST} \s/oauth/(?!callback\.php|success\.php)([^/\s?]+)\.php[\s?] [NC]
    RewriteRule ^(.*)\.php$ - [F,L]
</IfModule>

# Custom error handling with security-focused messages
ErrorDocument 400 "Bad Request - Invalid OAuth request"
ErrorDocument 401 "Unauthorized - OAuth authentication required"
ErrorDocument 403 "Forbidden - Access denied to OAuth resource"
ErrorDocument 404 "Not Found - OAuth endpoint not available"
ErrorDocument 405 "Method Not Allowed - Invalid HTTP method for OAuth"
ErrorDocument 500 "Internal Server Error - OAuth service temporarily unavailable"
ErrorDocument 503 "Service Unavailable - OAuth service maintenance"

# Rate limiting (if mod_evasive is available)
<IfModule mod_evasive24.c>
    DOSHashTableSize    2048
    DOSPageCount        5
    DOSPageInterval     1
    DOSSiteCount        100
    DOSSiteInterval     1
    DOSBlockingPeriod   60
</IfModule>

# Caching for static assets (if any)
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    ExpiresByType image/png "access plus 1 month"
    ExpiresByType image/jpg "access plus 1 month"
    ExpiresByType image/jpeg "access plus 1 month"
    ExpiresByType image/gif "access plus 1 month"
    ExpiresByType image/svg+xml "access plus 1 month"
</IfModule>

# Gzip compression for performance
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/json
</IfModule>

# Additional OAuth Security Measures
<IfModule mod_rewrite.c>
    # Block common attack patterns
    RewriteCond %{QUERY_STRING} (\<|%3C).*script.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} GLOBALS(=|\[|\%[0-9A-Z]{0,2}) [OR]
    RewriteCond %{QUERY_STRING} _REQUEST(=|\[|\%[0-9A-Z]{0,2}) [OR]
    RewriteCond %{QUERY_STRING} \.\./\.\. [OR]
    RewriteCond %{QUERY_STRING} (localhost|loopback|127\.0\.0\.1) [NC,OR]
    RewriteCond %{QUERY_STRING} \.(php|asp|jsp|cgi|pl) [NC]
    RewriteRule .* - [F,L]
    
    # Block suspicious user agents
    RewriteCond %{HTTP_USER_AGENT} (libwww-perl|wget|python|nikto|curl|scan|java|winhttp|clshttp|loader) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} (<|>|'|%0A|%0D|%27|%3C|%3E|%00) [NC,OR]
    RewriteCond %{HTTP_USER_AGENT} (;|<|>|'|"|\)|\(|%0A|%0D|%22|%27|%28|%3C|%3E|%00).*(libwww-perl|wget|python|nikto|curl|scan|java|winhttp|HTTrack|clshttp|archiver|loader|email|harvest|extract|grab|miner) [NC]
    RewriteRule .* - [F,L]
</IfModule>

# Prevent access to WordPress/CMS related files (security hardening)
<IfModule mod_rewrite.c>
    RewriteRule ^wp-admin/includes/ - [F,L]
    RewriteRule !^wp-includes/ - [S=3]
    RewriteRule ^wp-includes/[^/]+\.php$ - [F,L]
    RewriteRule ^wp-includes/js/tinymce/langs/.+\.php - [F,L]
    RewriteRule ^wp-includes/theme-compat/ - [F,L]
</IfModule>
