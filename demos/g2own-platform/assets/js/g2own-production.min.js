/*!
 * G2Own Production Bundle - Critical Systems Only
 * Version: 1.0.1 - Animation conflicts fixed
 * Combined: Authentication + Core Utilities (No Animation Observers)
 */
!function(){"use strict";window.updateProgress=function(t,e){const n=document.querySelector(".progress-fill"),o=document.querySelector(".progress-text");n&&(n.style.width=t+"%"),o&&(o.textContent=e),t>=100&&setTimeout((()=>{const t=document.querySelector("#preloader");t&&(t.style.opacity="0",setTimeout((()=>t.style.display="none"),300))}),200)};class AuthenticationBridge{constructor(){this.sessionCheckURL="/session-check.php",this.localStorageKey="g2own_auth",this.checkInterval=3e4,this.isAuthenticated=!1,this.userdata=null,this.requestController=null,this.init()}async init(){try{await this.checkAuthStatus(),setInterval((()=>this.checkAuthStatus()),this.checkInterval),window.addEventListener("storage",this.handleStorageChange.bind(this),{passive:!0}),window.addEventListener("focus",this.handleFocusChange.bind(this),{passive:!0})}catch(t){this.updateAuthState(!1,null)}}async checkAuthStatus(){try{this.requestController&&this.requestController.abort(),this.requestController=new AbortController;const t=setTimeout((()=>this.requestController.abort()),5e3);try{const e=await fetch(this.sessionCheckURL,{method:"GET",credentials:"include",mode:"cors",signal:this.requestController.signal});if(clearTimeout(t),e.ok){const t=await e.json();this.updateAuthState(t.authenticated||!1,t.user||null)}else this.updateAuthState(!1,null)}catch(e){if("AbortError"!==e.name)try{const t=await this.checkViaJSONP();this.updateAuthState(t.authenticated||!1,t.user||null)}catch(t){this.updateAuthState(!1,null)}}}catch(t){this.updateAuthState(!1,null)}}updateAuthState(t,e){const n=this.isAuthenticated;this.isAuthenticated=t,this.userdata=e;try{localStorage.setItem(this.localStorageKey,JSON.stringify({isAuthenticated:t,userData:e,timestamp:Date.now()}))}catch(t){localStorage.removeItem(this.localStorageKey)}n!==t&&requestAnimationFrame((()=>{this.updateAuthUI(),this.dispatchAuthEvents(t,e)}))}updateAuthUI(){const t=document.querySelector(".auth-toggle"),e=document.querySelector(".auth-toggle i");if(!t)return;t.classList.toggle("authenticated",this.isAuthenticated);if(e){const t=this.isAuthenticated?"ph-user-circle-check":"ph-user-circle";e.classList.contains(t)||(e.className=`ph ${t} nav-gaming-icon`,e.style.color=this.isAuthenticated?"#00ff00":"")}const n=document.querySelector(".auth-dropdown");n&&"none"!==n.style.display&&this.updateDropdownContent(n)}updateDropdownContent(t){if(!t)return;if(this.isAuthenticated&&this.userdata){const e=this.userdata,n=e.photoUrl&&!e.photoUrlIsDefault?e.photoUrl:null,o=e.name?e.name.charAt(0).toUpperCase():"U";t.innerHTML=`\n                <div class="user-info">\n                    ${n?`<img src="${n}" alt="Profile" class="user-avatar">`:`<div class="user-avatar-placeholder">${o}</div>`}\n                    <div class="user-details">\n                        <span class="username">${e.name||"User"}</span>\n                        <span class="user-email">${e.email||""}</span>\n                    </div>\n                </div>\n                <hr class="dropdown-divider">\n                <a href="/" class="dropdown-link">Community</a>\n                <a href="/profile/" class="dropdown-link">Profile</a>\n                <a href="/settings/" class="dropdown-link">Settings</a>\n                <hr class="dropdown-divider">\n                <button onclick="window.authBridge.logout()" class="dropdown-link logout-btn">Logout</button>\n            `}else t.innerHTML='\n                <div class="auth-options">\n                    <button onclick="window.authBridge.login()" class="dropdown-link login-btn">Login</button>\n                    <button onclick="window.authBridge.register()" class="dropdown-link register-btn">Register</button>\n                </div>\n            '}dispatchAuthEvents(t,e){try{window.dispatchEvent(new CustomEvent("authStateChanged",{detail:{authenticated:t,user:e}})),window.dispatchEvent(new CustomEvent("g2own:auth-update",{detail:{user:e}}))}catch(t){}}login(){window.location.href=`/login/`}logout(){this.updateAuthState(!1,null),window.location.href=`/logout/`}register(){window.location.href=`/register/`}getCurrentUser(){return this.userdata}isUserAuthenticated(){return this.isAuthenticated}async checkViaJSONP(){return new Promise(((t,e)=>{const n=document.createElement("script"),o="g2own_auth_"+Date.now()+"_"+Math.random().toString(36).substr(2,5);let s=!1;window[o]=e=>{s||(s=!0,i(),t(e))};const i=()=>{delete window[o],n.parentNode&&n.parentNode.removeChild(n)};n.onerror=()=>{s||(s=!0,i(),e(new Error("JSONP script load failed")))},setTimeout((()=>{s||(s=!0,i(),e(new Error("JSONP request timeout")))}),1e4);const r=this.sessionCheckURL.includes("?")?"&":"?";n.src=`${this.sessionCheckURL}${r}callback=${o}&_=${Date.now()}`,document.head.appendChild(n)}))}}function initCriticalComponents(){const t=document.querySelector(".navbar");t&&t.classList.add("loaded"),window.authBridge&&window.authBridge.checkAuthStatus(),updateProgress(10,"Initializing...")}window.G2OwnUtils={debounce:function(t,e){let n;return function(...o){const s=()=>{clearTimeout(n),t(...o)};clearTimeout(n),n=setTimeout(s,e)}},throttle:function(t,e){let n;return function(){const o=arguments,s=this;n||(t.apply(s,o),n=!0,setTimeout((()=>n=!1),e))}},isInViewport:function(t){const e=t.getBoundingClientRect();return e.top>=0&&e.left>=0&&e.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&e.right<=(window.innerWidth||document.documentElement.clientWidth)}},"loading"===document.readyState?document.addEventListener("DOMContentLoaded",(function(){window.authBridge||(window.authBridge=new AuthenticationBridge,window.AuthenticationBridge=AuthenticationBridge),initCriticalComponents()})):window.authBridge||(window.authBridge=new AuthenticationBridge,window.AuthenticationBridge=AuthenticationBridge,initCriticalComponents())}();
